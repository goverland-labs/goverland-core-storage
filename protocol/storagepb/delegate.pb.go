// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: storagepb/delegate.proto

package storagepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDelegatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId         string   `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	QueryAccounts []string `protobuf:"bytes,2,rep,name=query_accounts,json=queryAccounts,proto3" json:"query_accounts,omitempty"`
	Sort          *string  `protobuf:"bytes,3,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	Limit         int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32    `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetDelegatesRequest) Reset() {
	*x = GetDelegatesRequest{}
	mi := &file_storagepb_delegate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatesRequest) ProtoMessage() {}

func (x *GetDelegatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatesRequest.ProtoReflect.Descriptor instead.
func (*GetDelegatesRequest) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{0}
}

func (x *GetDelegatesRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *GetDelegatesRequest) GetQueryAccounts() []string {
	if x != nil {
		return x.QueryAccounts
	}
	return nil
}

func (x *GetDelegatesRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *GetDelegatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetDelegatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetDelegatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegates []*DelegateEntry `protobuf:"bytes,1,rep,name=delegates,proto3" json:"delegates,omitempty"`
	Total     int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetDelegatesResponse) Reset() {
	*x = GetDelegatesResponse{}
	mi := &file_storagepb_delegate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatesResponse) ProtoMessage() {}

func (x *GetDelegatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatesResponse.ProtoReflect.Descriptor instead.
func (*GetDelegatesResponse) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{1}
}

func (x *GetDelegatesResponse) GetDelegates() []*DelegateEntry {
	if x != nil {
		return x.Delegates
	}
	return nil
}

func (x *GetDelegatesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DelegateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address               string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	EnsName               string  `protobuf:"bytes,2,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	DelegatorCount        int32   `protobuf:"varint,3,opt,name=delegator_count,json=delegatorCount,proto3" json:"delegator_count,omitempty"`
	PercentOfDelegators   float64 `protobuf:"fixed64,4,opt,name=percent_of_delegators,json=percentOfDelegators,proto3" json:"percent_of_delegators,omitempty"` // in basis points
	VotingPower           float64 `protobuf:"fixed64,5,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
	PercentOfVotingPower  float64 `protobuf:"fixed64,6,opt,name=percent_of_voting_power,json=percentOfVotingPower,proto3" json:"percent_of_voting_power,omitempty"` // in basis points
	About                 string  `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	Statement             string  `protobuf:"bytes,8,opt,name=statement,proto3" json:"statement,omitempty"`
	VotesCount            int32   `protobuf:"varint,9,opt,name=votes_count,json=votesCount,proto3" json:"votes_count,omitempty"`
	CreatedProposalsCount int32   `protobuf:"varint,10,opt,name=created_proposals_count,json=createdProposalsCount,proto3" json:"created_proposals_count,omitempty"`
}

func (x *DelegateEntry) Reset() {
	*x = DelegateEntry{}
	mi := &file_storagepb_delegate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateEntry) ProtoMessage() {}

func (x *DelegateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateEntry.ProtoReflect.Descriptor instead.
func (*DelegateEntry) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{2}
}

func (x *DelegateEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DelegateEntry) GetEnsName() string {
	if x != nil {
		return x.EnsName
	}
	return ""
}

func (x *DelegateEntry) GetDelegatorCount() int32 {
	if x != nil {
		return x.DelegatorCount
	}
	return 0
}

func (x *DelegateEntry) GetPercentOfDelegators() float64 {
	if x != nil {
		return x.PercentOfDelegators
	}
	return 0
}

func (x *DelegateEntry) GetVotingPower() float64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

func (x *DelegateEntry) GetPercentOfVotingPower() float64 {
	if x != nil {
		return x.PercentOfVotingPower
	}
	return 0
}

func (x *DelegateEntry) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *DelegateEntry) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *DelegateEntry) GetVotesCount() int32 {
	if x != nil {
		return x.VotesCount
	}
	return 0
}

func (x *DelegateEntry) GetCreatedProposalsCount() int32 {
	if x != nil {
		return x.CreatedProposalsCount
	}
	return 0
}

type GetDelegateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId   string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetDelegateProfileRequest) Reset() {
	*x = GetDelegateProfileRequest{}
	mi := &file_storagepb_delegate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateProfileRequest) ProtoMessage() {}

func (x *GetDelegateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegateProfileRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateProfileRequest) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{3}
}

func (x *GetDelegateProfileRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *GetDelegateProfileRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetDelegateProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address              string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	VotingPower          float64                `protobuf:"fixed64,2,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
	IncomingPower        float64                `protobuf:"fixed64,3,opt,name=incoming_power,json=incomingPower,proto3" json:"incoming_power,omitempty"`
	OutgoingPower        float64                `protobuf:"fixed64,4,opt,name=outgoing_power,json=outgoingPower,proto3" json:"outgoing_power,omitempty"`
	PercentOfVotingPower float64                `protobuf:"fixed64,5,opt,name=percent_of_voting_power,json=percentOfVotingPower,proto3" json:"percent_of_voting_power,omitempty"`
	PercentOfDelegators  float64                `protobuf:"fixed64,6,opt,name=percent_of_delegators,json=percentOfDelegators,proto3" json:"percent_of_delegators,omitempty"`
	Delegates            []*ProfileDelegateItem `protobuf:"bytes,7,rep,name=delegates,proto3" json:"delegates,omitempty"`
	Expiration           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *GetDelegateProfileResponse) Reset() {
	*x = GetDelegateProfileResponse{}
	mi := &file_storagepb_delegate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegateProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateProfileResponse) ProtoMessage() {}

func (x *GetDelegateProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegateProfileResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateProfileResponse) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{4}
}

func (x *GetDelegateProfileResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetDelegateProfileResponse) GetVotingPower() float64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

func (x *GetDelegateProfileResponse) GetIncomingPower() float64 {
	if x != nil {
		return x.IncomingPower
	}
	return 0
}

func (x *GetDelegateProfileResponse) GetOutgoingPower() float64 {
	if x != nil {
		return x.OutgoingPower
	}
	return 0
}

func (x *GetDelegateProfileResponse) GetPercentOfVotingPower() float64 {
	if x != nil {
		return x.PercentOfVotingPower
	}
	return 0
}

func (x *GetDelegateProfileResponse) GetPercentOfDelegators() float64 {
	if x != nil {
		return x.PercentOfDelegators
	}
	return 0
}

func (x *GetDelegateProfileResponse) GetDelegates() []*ProfileDelegateItem {
	if x != nil {
		return x.Delegates
	}
	return nil
}

func (x *GetDelegateProfileResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type ProfileDelegateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	EnsName        string  `protobuf:"bytes,2,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	Weight         float64 `protobuf:"fixed64,3,opt,name=weight,proto3" json:"weight,omitempty"`
	DelegatedPower float64 `protobuf:"fixed64,4,opt,name=delegated_power,json=delegatedPower,proto3" json:"delegated_power,omitempty"`
}

func (x *ProfileDelegateItem) Reset() {
	*x = ProfileDelegateItem{}
	mi := &file_storagepb_delegate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileDelegateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileDelegateItem) ProtoMessage() {}

func (x *ProfileDelegateItem) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileDelegateItem.ProtoReflect.Descriptor instead.
func (*ProfileDelegateItem) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{5}
}

func (x *ProfileDelegateItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ProfileDelegateItem) GetEnsName() string {
	if x != nil {
		return x.EnsName
	}
	return ""
}

func (x *ProfileDelegateItem) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProfileDelegateItem) GetDelegatedPower() float64 {
	if x != nil {
		return x.DelegatedPower
	}
	return 0
}

type GetAllDelegationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account address that initiates the delegation
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAllDelegationsRequest) Reset() {
	*x = GetAllDelegationsRequest{}
	mi := &file_storagepb_delegate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDelegationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDelegationsRequest) ProtoMessage() {}

func (x *GetAllDelegationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDelegationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllDelegationsRequest) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllDelegationsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DelegationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The delegation address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Resolved ens name
	EnsName string `protobuf:"bytes,2,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	// Percentage of delegation
	PercentOfDelegators int32 `protobuf:"varint,3,opt,name=percent_of_delegators,json=percentOfDelegators,proto3" json:"percent_of_delegators,omitempty"`
	// Expires at date. If 0 the expiration is not set
	Expiration *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *DelegationDetails) Reset() {
	*x = DelegationDetails{}
	mi := &file_storagepb_delegate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationDetails) ProtoMessage() {}

func (x *DelegationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationDetails.ProtoReflect.Descriptor instead.
func (*DelegationDetails) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{7}
}

func (x *DelegationDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DelegationDetails) GetEnsName() string {
	if x != nil {
		return x.EnsName
	}
	return ""
}

func (x *DelegationDetails) GetPercentOfDelegators() int32 {
	if x != nil {
		return x.PercentOfDelegators
	}
	return 0
}

func (x *DelegationDetails) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type DelegationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Dao details
	Dao *DaoInfo `protobuf:"bytes,1,opt,name=dao,proto3" json:"dao,omitempty"`
	// List of delegations
	Delegations []*DelegationDetails `protobuf:"bytes,2,rep,name=delegations,proto3" json:"delegations,omitempty"`
}

func (x *DelegationSummary) Reset() {
	*x = DelegationSummary{}
	mi := &file_storagepb_delegate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationSummary) ProtoMessage() {}

func (x *DelegationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationSummary.ProtoReflect.Descriptor instead.
func (*DelegationSummary) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{8}
}

func (x *DelegationSummary) GetDao() *DaoInfo {
	if x != nil {
		return x.Dao
	}
	return nil
}

func (x *DelegationSummary) GetDelegations() []*DelegationDetails {
	if x != nil {
		return x.Delegations
	}
	return nil
}

type GetAllDelegationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of total delegations in our DB
	TotalDelegationsCount int32 `protobuf:"varint,1,opt,name=total_delegations_count,json=totalDelegationsCount,proto3" json:"total_delegations_count,omitempty"`
	// List of delegations grouped by dao and sorted by popularity index
	Delegations []*DelegationSummary `protobuf:"bytes,2,rep,name=delegations,proto3" json:"delegations,omitempty"`
}

func (x *GetAllDelegationsResponse) Reset() {
	*x = GetAllDelegationsResponse{}
	mi := &file_storagepb_delegate_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDelegationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDelegationsResponse) ProtoMessage() {}

func (x *GetAllDelegationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDelegationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllDelegationsResponse) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllDelegationsResponse) GetTotalDelegationsCount() int32 {
	if x != nil {
		return x.TotalDelegationsCount
	}
	return 0
}

func (x *GetAllDelegationsResponse) GetDelegations() []*DelegationSummary {
	if x != nil {
		return x.Delegations
	}
	return nil
}

type GetAllDelegatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account address that initiates the delegation
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAllDelegatorsRequest) Reset() {
	*x = GetAllDelegatorsRequest{}
	mi := &file_storagepb_delegate_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDelegatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDelegatorsRequest) ProtoMessage() {}

func (x *GetAllDelegatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDelegatorsRequest.ProtoReflect.Descriptor instead.
func (*GetAllDelegatorsRequest) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllDelegatorsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DelegatorSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Dao details
	Dao *DaoInfo `protobuf:"bytes,1,opt,name=dao,proto3" json:"dao,omitempty"`
	// List of delegators
	Delegators []*DelegationDetails `protobuf:"bytes,2,rep,name=delegators,proto3" json:"delegators,omitempty"`
}

func (x *DelegatorSummary) Reset() {
	*x = DelegatorSummary{}
	mi := &file_storagepb_delegate_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatorSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorSummary) ProtoMessage() {}

func (x *DelegatorSummary) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatorSummary.ProtoReflect.Descriptor instead.
func (*DelegatorSummary) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{11}
}

func (x *DelegatorSummary) GetDao() *DaoInfo {
	if x != nil {
		return x.Dao
	}
	return nil
}

func (x *DelegatorSummary) GetDelegators() []*DelegationDetails {
	if x != nil {
		return x.Delegators
	}
	return nil
}

type GetAllDelegatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of total delegators in our DB
	TotalDelegatorsCount int32 `protobuf:"varint,1,opt,name=total_delegators_count,json=totalDelegatorsCount,proto3" json:"total_delegators_count,omitempty"`
	// List of delegators grouped by dao and sorted by popularity index
	Delegators []*DelegatorSummary `protobuf:"bytes,2,rep,name=delegators,proto3" json:"delegators,omitempty"`
}

func (x *GetAllDelegatorsResponse) Reset() {
	*x = GetAllDelegatorsResponse{}
	mi := &file_storagepb_delegate_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDelegatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDelegatorsResponse) ProtoMessage() {}

func (x *GetAllDelegatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDelegatorsResponse.ProtoReflect.Descriptor instead.
func (*GetAllDelegatorsResponse) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllDelegatorsResponse) GetTotalDelegatorsCount() int32 {
	if x != nil {
		return x.TotalDelegatorsCount
	}
	return 0
}

func (x *GetAllDelegatorsResponse) GetDelegators() []*DelegatorSummary {
	if x != nil {
		return x.Delegators
	}
	return nil
}

type GetDelegatesSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account address that initiates the delegation
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetDelegatesSummaryRequest) Reset() {
	*x = GetDelegatesSummaryRequest{}
	mi := &file_storagepb_delegate_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatesSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatesSummaryRequest) ProtoMessage() {}

func (x *GetDelegatesSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatesSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetDelegatesSummaryRequest) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{13}
}

func (x *GetDelegatesSummaryRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetDelegatesSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of total delegators in our DB
	TotalDelegatorsCount int32 `protobuf:"varint,1,opt,name=total_delegators_count,json=totalDelegatorsCount,proto3" json:"total_delegators_count,omitempty"`
	// The number of total delegations in our DB
	TotalDelegationsCount int32 `protobuf:"varint,2,opt,name=total_delegations_count,json=totalDelegationsCount,proto3" json:"total_delegations_count,omitempty"`
}

func (x *GetDelegatesSummaryResponse) Reset() {
	*x = GetDelegatesSummaryResponse{}
	mi := &file_storagepb_delegate_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatesSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatesSummaryResponse) ProtoMessage() {}

func (x *GetDelegatesSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storagepb_delegate_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatesSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetDelegatesSummaryResponse) Descriptor() ([]byte, []int) {
	return file_storagepb_delegate_proto_rawDescGZIP(), []int{14}
}

func (x *GetDelegatesSummaryResponse) GetTotalDelegatorsCount() int32 {
	if x != nil {
		return x.TotalDelegatorsCount
	}
	return 0
}

func (x *GetDelegatesSummaryResponse) GetTotalDelegationsCount() int32 {
	if x != nil {
		return x.TotalDelegationsCount
	}
	return 0
}

var File_storagepb_delegate_proto protoreflect.FileDescriptor

var file_storagepb_delegate_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70,
	0x62, 0x2f, 0x64, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x22, 0x64, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x88, 0x03, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4f,
	0x66, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x17, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x14, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x8c, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f, 0x75, 0x74,
	0x67, 0x6f, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8b, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x34, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x64, 0x61, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x64, 0x61, 0x6f, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x33, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x64, 0x61, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70,
	0x62, 0x2e, 0x44, 0x61, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x64, 0x61, 0x6f, 0x12, 0x3c,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x8d, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x36, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0xe1, 0x03, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12,
	0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storagepb_delegate_proto_rawDescOnce sync.Once
	file_storagepb_delegate_proto_rawDescData = file_storagepb_delegate_proto_rawDesc
)

func file_storagepb_delegate_proto_rawDescGZIP() []byte {
	file_storagepb_delegate_proto_rawDescOnce.Do(func() {
		file_storagepb_delegate_proto_rawDescData = protoimpl.X.CompressGZIP(file_storagepb_delegate_proto_rawDescData)
	})
	return file_storagepb_delegate_proto_rawDescData
}

var file_storagepb_delegate_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_storagepb_delegate_proto_goTypes = []any{
	(*GetDelegatesRequest)(nil),         // 0: storagepb.GetDelegatesRequest
	(*GetDelegatesResponse)(nil),        // 1: storagepb.GetDelegatesResponse
	(*DelegateEntry)(nil),               // 2: storagepb.DelegateEntry
	(*GetDelegateProfileRequest)(nil),   // 3: storagepb.GetDelegateProfileRequest
	(*GetDelegateProfileResponse)(nil),  // 4: storagepb.GetDelegateProfileResponse
	(*ProfileDelegateItem)(nil),         // 5: storagepb.ProfileDelegateItem
	(*GetAllDelegationsRequest)(nil),    // 6: storagepb.GetAllDelegationsRequest
	(*DelegationDetails)(nil),           // 7: storagepb.DelegationDetails
	(*DelegationSummary)(nil),           // 8: storagepb.DelegationSummary
	(*GetAllDelegationsResponse)(nil),   // 9: storagepb.GetAllDelegationsResponse
	(*GetAllDelegatorsRequest)(nil),     // 10: storagepb.GetAllDelegatorsRequest
	(*DelegatorSummary)(nil),            // 11: storagepb.DelegatorSummary
	(*GetAllDelegatorsResponse)(nil),    // 12: storagepb.GetAllDelegatorsResponse
	(*GetDelegatesSummaryRequest)(nil),  // 13: storagepb.GetDelegatesSummaryRequest
	(*GetDelegatesSummaryResponse)(nil), // 14: storagepb.GetDelegatesSummaryResponse
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
	(*DaoInfo)(nil),                     // 16: storagepb.DaoInfo
}
var file_storagepb_delegate_proto_depIdxs = []int32{
	2,  // 0: storagepb.GetDelegatesResponse.delegates:type_name -> storagepb.DelegateEntry
	5,  // 1: storagepb.GetDelegateProfileResponse.delegates:type_name -> storagepb.ProfileDelegateItem
	15, // 2: storagepb.GetDelegateProfileResponse.expiration:type_name -> google.protobuf.Timestamp
	15, // 3: storagepb.DelegationDetails.expiration:type_name -> google.protobuf.Timestamp
	16, // 4: storagepb.DelegationSummary.dao:type_name -> storagepb.DaoInfo
	7,  // 5: storagepb.DelegationSummary.delegations:type_name -> storagepb.DelegationDetails
	8,  // 6: storagepb.GetAllDelegationsResponse.delegations:type_name -> storagepb.DelegationSummary
	16, // 7: storagepb.DelegatorSummary.dao:type_name -> storagepb.DaoInfo
	7,  // 8: storagepb.DelegatorSummary.delegators:type_name -> storagepb.DelegationDetails
	11, // 9: storagepb.GetAllDelegatorsResponse.delegators:type_name -> storagepb.DelegatorSummary
	0,  // 10: storagepb.Delegate.GetDelegates:input_type -> storagepb.GetDelegatesRequest
	3,  // 11: storagepb.Delegate.GetDelegateProfile:input_type -> storagepb.GetDelegateProfileRequest
	6,  // 12: storagepb.Delegate.GetAllDelegations:input_type -> storagepb.GetAllDelegationsRequest
	10, // 13: storagepb.Delegate.GetAllDelegators:input_type -> storagepb.GetAllDelegatorsRequest
	13, // 14: storagepb.Delegate.GetDelegatesSummary:input_type -> storagepb.GetDelegatesSummaryRequest
	1,  // 15: storagepb.Delegate.GetDelegates:output_type -> storagepb.GetDelegatesResponse
	4,  // 16: storagepb.Delegate.GetDelegateProfile:output_type -> storagepb.GetDelegateProfileResponse
	9,  // 17: storagepb.Delegate.GetAllDelegations:output_type -> storagepb.GetAllDelegationsResponse
	12, // 18: storagepb.Delegate.GetAllDelegators:output_type -> storagepb.GetAllDelegatorsResponse
	14, // 19: storagepb.Delegate.GetDelegatesSummary:output_type -> storagepb.GetDelegatesSummaryResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_storagepb_delegate_proto_init() }
func file_storagepb_delegate_proto_init() {
	if File_storagepb_delegate_proto != nil {
		return
	}
	file_storagepb_dao_proto_init()
	file_storagepb_delegate_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storagepb_delegate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storagepb_delegate_proto_goTypes,
		DependencyIndexes: file_storagepb_delegate_proto_depIdxs,
		MessageInfos:      file_storagepb_delegate_proto_msgTypes,
	}.Build()
	File_storagepb_delegate_proto = out.File
	file_storagepb_delegate_proto_rawDesc = nil
	file_storagepb_delegate_proto_goTypes = nil
	file_storagepb_delegate_proto_depIdxs = nil
}
