syntax = "proto3";

package internalapi;

import "google/protobuf/timestamp.proto";
import "base.proto";

option go_package = ".;internalapi";

service Dao {
  rpc GetByID(DaoByIDRequest) returns (DaoByIDResponse);
  rpc GetByFilter(DaoByFilterRequest) returns (DaoByFilterResponse);
  rpc GetTopCategories(TopCategoriesRequest) returns (TopCategoriesResponse);
}

message DaoByIDRequest {
  string dao_id = 1;
}

message Voting  {
  uint64 delay = 1;
  uint64 period = 2;
  string type = 3;
  float quorum = 4;
  bool blind = 5;
  bool  hide_abstain = 6;
  string privacy = 7;
  bool aliased = 8;
}

message Treasury  {
  string name = 1;
  string address = 2;
  string network = 3;
}

message DaoInfo {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string name = 4;
  bool private = 5;
  string about = 6;
  string avatar = 7;
  string terms = 8;
  string location = 9;
  string website = 10;
  string twitter = 11;
  string github = 12;
  string coingeko = 13;
  string email = 14;
  string network = 15;
  string symbol = 16;
  string skin = 17;
  string domain = 18;
  repeated Strategy strategies = 19;
  Voting         voting = 20;
  repeated string     categories = 21;
  repeated Treasury treasuries = 22;
  uint64 followers_count = 23;
  uint64 proposals_count = 24;
  string guidelines = 25;
  string template = 26;
  string parent_id = 27;
}

message DaoByIDResponse {
  DaoInfo dao = 1;
}

message DaoByFilterRequest {
  optional string query = 1;
  optional string category = 2;
  optional uint64 limit = 3;
  optional uint64 offset = 4;
}

message DaoByFilterResponse {
  repeated DaoInfo daos = 1;
  uint64 total_count = 2;
}

message TopCategory {
  string category = 1;
  repeated DaoInfo daos = 2;
}

message TopCategoriesRequest {
  uint64 limit = 1;
}

message TopCategoriesResponse {
  repeated TopCategory categories = 1;
}
